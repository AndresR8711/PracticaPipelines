name: Calculadora de Edad y Etapa de Vida

on:
  workflow_dispatch:
    inputs:
      dia:
        description: 'Día de nacimiento (1-31)'
        required: true
        type: number
      mes:
        description: 'Mes de nacimiento (1-12)'
        required: true
        type: number
      anio:
        description: 'Año de nacimiento (4 dígitos)'
        required: true
        type: number

env:
  LIM_NINEZ: 13
  LIM_ADOLESCENCIA: 17
  LIM_ADULTO_JOVEN: 35
  LIM_ADULTO: 64

jobs:
  validar-fecha:
    name: Validar Fecha
    runs-on: ubuntu-latest
    outputs:
      es_valida: ${{ steps.validacion.outputs.es_valida }}
      mensaje_error: ${{ steps.validacion.outputs.mensaje_error }}
    steps:
    - name: Validar fecha
      id: validacion
      run: |
        dia=${{ github.event.inputs.dia }}
        mes=${{ github.event.inputs.mes }}
        anio=${{ github.event.inputs.anio }}
        
        # Validar rangos básicos
        if (( dia < 1 || dia > 31 )); then
          echo "::error::Día inválido: debe ser entre 1 y 31"
          echo "es_valida=false" >> $GITHUB_OUTPUT
          echo "mensaje_error=Día inválido" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        if (( mes < 1 || mes > 12 )); then
          echo "::error::Mes inválido: debe ser entre 1 y 12"
          echo "es_valida=false" >> $GITHUB_OUTPUT
          echo "mensaje_error=Mes inválido" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Validar año (no futuro)
        current_year=$(date +%Y)
        if (( anio > current_year )); then
          echo "::error::Año inválido: no puede ser futuro"
          echo "es_valida=false" >> $GITHUB_OUTPUT
          echo "mensaje_error=Año futuro" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        # Validar fecha real usando date
        if ! date -d "$anio-$mes-$dia" >/dev/null 2>&1; then
          echo "::error::Fecha inválida: $dia/$mes/$anio no es una fecha válida"
          echo "es_valida=false" >> $GITHUB_OUTPUT
          echo "mensaje_error=Fecha inválida" >> $GITHUB_OUTPUT
          exit 0
        fi
        
        echo "es_valida=true" >> $GITHUB_OUTPUT
        echo "mensaje_error=" >> $GITHUB_OUTPUT

  calcular-edad:
    name: Calcular Edad
    needs: validar-fecha
    if: needs.validar-fecha.outputs.es_valida == 'true'
    runs-on: ubuntu-latest
    outputs:
      edad_formateada: ${{ steps.edad.outputs.edad_formateada }}
      edad_anios: ${{ steps.edad.outputs.edad_anios }}
    steps:
    - name: Calcular edad exacta
      id: edad
      run: |
        fecha_nacimiento="${{ github.event.inputs.anio }}-${{ github.event.inputs.mes }}-${{ github.event.inputs.dia }}"
        
        # Calcular edad con precisión usando Python
        python3 -c "
        from datetime import datetime, date
        nac = datetime.strptime('$fecha_nacimiento', '%Y-%m-%d').date()
        hoy = date.today()
        
        años = hoy.year - nac.year
        meses = hoy.month - nac.month
        dias = hoy.day - nac.day
        
        # Ajustar días negativos
        if dias < 0:
            meses -= 1
            # Obtener días del mes anterior
            from calendar import monthrange
            _, ultimo_dia_mes_anterior = monthrange(hoy.year, hoy.month-1 if hoy.month > 1 else 12)
            dias += ultimo_dia_mes_anterior
        
                  
        print(f'edad_formateada={años} años, {meses} meses, {dias} días')
        print(f'edad_anios={años}')
        " >> $GITHUB_OUTPUT
        
        echo "Fecha de nacimiento: $fecha_nacimiento"
        echo "Edad calculada: $(cat $GITHUB_OUTPUT | grep edad_formateada | cut -d= -f2)"

  clasificar-etapa:
    name: Clasificar Etapa de Vida
    needs: [validar-fecha, calcular-edad]
    runs-on: ubuntu-latest
    steps:
   
    - name: Clasificar según edad
      if: needs.validar-fecha.outputs.es_valida == 'true'
      env:
        LIM_NINEZ: ${{ env.LIM_NINEZ }}
        LIM_ADOLESCENCIA: ${{ env.LIM_ADOLESCENCIA }}
        LIM_ADULTO_JOVEN: ${{ env.LIM_ADULTO_JOVEN }}
        LIM_ADULTO: ${{ env.LIM_ADULTO }}
        EDAD: ${{ needs.calcular-edad.outputs.edad_anios }}
      run: |
        echo "Edad exacta: ${{ needs.calcular-edad.outputs.edad_formateada }}"
        echo "Años: $EDAD"
        
        if [ "$EDAD" -le "$LIM_NINEZ" ]; then
          etapa="Niñez"
        elif [ "$EDAD" -le "$LIM_ADOLESCENCIA" ]; then
          etapa="Adolescencia"
        elif [ "$EDAD" -le "$LIM_ADULTO_JOVEN" ]; then
          etapa="Adulto Joven"
        elif [ "$EDAD" -le "$LIM_ADULTO" ]; then
          etapa="Adulto"
        else
          etapa="Adulto Mayor"
        fi

        echo "Su clasificación en la etapa de vida actual es: $etapa"
        echo "etapa=$etapa" >> $GITHUB_OUTPUT